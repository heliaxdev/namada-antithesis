name: Run test (triggerable)

on:
  workflow_dispatch:
    inputs:
      namada_genesis_docker_tag:
        description: 'The docker tag of the namada genesis docker images'
        required: true
        type: string
      namada_docker_tag:
        description: 'The docker tag of the namada docker images'
        required: true
        type: string
      masp_indexer_docker_tag:
        description: 'The docker tag of the masp indexer docker images'
        required: true
        type: string
      workload_tag:
        description: 'The docker tag of the workload docker images'
        type: string
        default: "master"
      check_tag:
        description: 'The docker tag of the check docker images'
        type: string
        default: "master"
      workload_num:
        description: 'Number of threads in the workload'
        type: number
        default: 3
      duration:
        description: 'Test duration in seconds'
        required: true
        type: number

jobs:
  run-test:
      name: Run workload test
      runs-on: ubuntu-latest
      timeout-minutes: 1440
      env:
        NAMADA_GENESIS_IMAGE: "ghcr.io/heliaxdev/ant-namada-genesis:${{ github.event.inputs.namada_genesis_docker_tag }}"
        NAMADA_IMAGE: "ghcr.io/heliaxdev/ant-namada:${{ github.event.inputs.namada_docker_tag }}"
        MASP_INDEXER_IMAGE_PREFIX: "ghcr.io/heliaxdev/ant-masp-indexer"
        MASP_INDEXER_IMAGE_TAG: ${{ github.event.inputs.masp_indexer_docker_tag }}
        WORKLOAD_IMAGE: "ghcr.io/heliaxdev/ant-workload:${{ github.event.inputs.workload_tag }}"
        CHECK_IMAGE: "ghcr.io/heliaxdev/ant-check:${{ github.event.inputs.check_tag }}"
        TEST_TIME_SEC: ${{ github.event.inputs.duration }}
        WORKLOAD_NUM: ${{ github.event.inputs.workload_num }}

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Login to ghcr.io
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Cache Docker layers
          uses: actions/cache@v4
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-docker-compose-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-docker-compose-
        - name: Docker compose build
          run:  docker compose -f config/docker-compose.yml build
        - name: Generate random number for the test seed
          run: echo "TEST_SEED=$RANDOM" >> $GITHUB_ENV
        - name: Run test
          run: ./run.sh
        - name: Upload logs
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: test-logs
            path: test-*.log